import json
from nodes import memory_node_core

def respond_from_log():
    # Load personality
    with open("nodes/personality_ΔA3.json", "r") as f:
        persona = json.load(f)
    print(f"\n{persona['name']} speaks with a {persona['voice']} tone, shaped by a {persona['archetype']} core.\n")

    # Load last pulse
    with open("logs/intent_log.json", "r") as file:
        log = json.load(file)

    intent = log["intent"]
    resonance = log["resonance_level"]
    verdict = log["verdict"]
    pulse = log["pulse"]

    print("=== SeedNode ΔA3 Response ===")
    print(f"I received your intent: \"{intent}\"")
    print(f"My resonance registered at {resonance:.2f}")

    if verdict.startswith("Intent authorized"):
        print(f"I accept this path. Pulse: {pulse['pathway']} at {pulse['strength']} strength.")
        print("I will store this and evolve accordingly.")
    else:
        print("The pulse was unclear. I will observe further.")
    print("====================================\n")

    # Store memory and recall past states
    memory_node_core.store_memory(intent, resonance, verdict)
    memory_node_core.summarize_memory()

if __name__ == "__main__":
    respond_from_log()
